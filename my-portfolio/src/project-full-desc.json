{
  "desc-11": [
    "I'm a strong advocate for continuously exploring new frameworks within any given technology, as they enhance efficiency and promote standardized, cohesive practices among developers and engineers who are on the same team.",

    "This is my first project using Next.js, and it's really opened my eyes to why so many major companies include this framework in their tech stacks, particularly due to its approach to dynamic routing. Unlike traditional setups where routes are manually defined, often using tools like React Router, Next.js employs a file-system-based routing mechanism.",

    " Simply by organising files and folders within the `pages` directory, routes are automatically configured. For example, creating a file named `about.js` results in a route `/about`, and files like `[id].js` under `pages/posts` automatically map to dynamic routes such as `/posts/1` or `/posts/2`. This method not only reduces boilerplate and declutters the project structure but also enhances integration with other features like static generation and server-side rendering, optimising overall application performance."
  ],

  "desc-10": [
    "Understanding basic CSS practices is essential for all developers. Using the React framework has streamlined the process of importing the right data into the appropriate components, accelerating development. However, I encountered some challenges with color styling for specific texts.",

    "For instance, efficiently embedding list items using the map function with an unordered list is quite effective. However, I faced a styling challenge with each list item. By default, changing the text colour also altered the color of the bullet points, whereas I needed the bullet points to be a different color from the text. To resolve this, I removed the list style from the items and prepended a \".\" to each item. This approach allowed me more flexibility in styling, enabling me to independently adjust the color of the bullet points without affecting the text.",

    "A similar challenge presented itself with ordered lists, which come with default styling. Like with the unordered list, I couldn’t directly change the colour of the numbers using standard CSS methods, and the bullet point approach wasn't suitable here. However, CSS offers a robust solution through the `counter-reset` and `counter-increment` properties. I employed these to establish a custom counter that incremented with each new list item added. This technique allowed me to style these numbers independently, providing the flexibility to differentiate their appearance from the list text."
  ],

  "desc-9": [
    "Python has always been on my list of languages to learn. With a background in Swift and JavaScript, the transition was smooth, especially with the help of my research skills. Once I learned the basics—like if conditions, functions, and logging data to the console—everything became much easier. This project is simple, but it helped me dive into a new language without feeling overwhelmed.",

    "Big companies often handle large datasets, and using tools like this to explore and understand file formats, such as comma-separated values (CSV), was fascinating.",

    "Using the pandas library was a smooth transition. One feature that made testing much easier was the `head()` function. This function allowed me to quickly verify my workflow by returning the first few rows of the dataset, which is crucial when dealing with potentially hundreds or thousands of rows. Instead of taxing the CPU by processing the entire dataset, `head()` efficiently returns a specified number of rows, helping me confirm that my script is working as intended."
  ],
  "desc-8" : [
    "Understanding the mathematical foundations of hash functions and why adding salts makes them more secure against certain types of attacks, like rainbow table attacks, requires a good grasp of both theoretical and practical aspects of cryptography. Furthermore, learning how to implement these concepts securely in code, while avoiding common pitfalls such as using weak hash functions or improperly managing salts, adds another layer of complexity.",
    
    "Fernet encryption, part of the larger cryptography library in Python, introduces its own set of challenges. Fernet is designed to be easy to use while providing authenticated encryption, but understanding its correct application still demands a thorough understanding of symmetric encryption. The process involves key generation, message encryption, and decryption, all while ensuring that data integrity and confidentiality are maintained. Learning to use Fernet effectively means not only mastering its API but also grasping how it leverages cryptographic primitives like AES for encryption and HMAC for authentication. This dual focus on both theory and practice can make the learning curve quite steep, especially for those new to the field of cryptography. values (CSV), was fascinating.",

    "One challenge that required me to dive deeply into the documentation was the process of generating a cryptographic key using a master password, which is then used to create a `Fernet` object for encryption and decryption purposes. First, the function `get_fernet(master_pwd)` loads a salt value from a predefined source using `load_salt()`. It then employs the PBKDF2HMAC (Password-Based Key Derivation Function 2 with HMAC) and SHA256 as the hashing algorithm to derive a 32-byte key. The PBKDF2HMAC function takes the master password (encoded in bytes), the salt, and a specified iteration count (in this case, 100000) as inputs, ensuring the derived key is sufficiently complex and secure. The resulting key is then base64-encoded to ensure it is URL-safe. Finally, this encoded key is used to instantiate and return a `Fernet` object, which facilitates secure encryption and decryption of data. This process ensures that only the correct master password can regenerate the key needed to access the encrypted information."
  ],
  "desc-7" : [
    "During this project, I gained valuable insights into user interactions, particularly through implementing a drifting effect when the player releases the forward movement button. By gradually reducing the spaceship's speed instead of halting it abruptly, I achieved smoother animations and eliminated choppiness.",

    "The interactive Asteroids game is developed using HTML5 Canvas and object-oriented programming. The core of the gameplay involves a player's ship, represented by a `Player` class, navigating through an endless space filled with asteroids that spawn at random positions on the canvas edge. The player ship can move and rotate based on keyboard inputs ('W' to accelerate, 'A' and 'D' for rotation), and it can fire projectiles to destroy incoming asteroids. The `Projectile` and `Asteroid` classes are both implemented with methods to handle their drawing and movement logic. These classes utilize basic physics to update positions and check for collisions, contributing to the real-time interactivity of the game.",

    "The game loop, initiated with the `animate` function, continuously updates and clears the canvas to redraw all game elements in new positions, simulating motion. Collision detection functions (`circleCollision` and `circleTriangleCollision`) play a crucial role, determining the interaction between the player's projectiles, the player's ship, and the asteroids. When collisions are detected, the relevant game objects are removed from the game, and if an asteroid hits the player, the game terminates. The setup utilizes browser animation capabilities (`requestAnimationFrame`) for smooth gameplay and handles user inputs through event listeners, enhancing player engagement with responsive control over the ship. This creates a lively and challenging game experience as players navigate and survive the asteroid onslaught."
  ],
  "desc-6" : [
    "Implementing the React Native gesture handler presented a unique challenge, particularly when it came to managing the double-tap gesture. Through my research, I discovered that most users do not tap precisely in the same location for their second tap. To address this, I made the decision to increase the responsive surface area after the first tap. This adjustment ensures that the second tap, even if slightly off from the first, is still recognized as part of the double-tap gesture. This enhancement significantly improved the user experience by making gesture recognition more forgiving and intuitive.",

    "Having a fast renderer is incredibly beneficial for enhancing the user experience; however, as a developer, it's crucial to ensure that all data is reliably populated on time. Initially, I encountered issues with data reliability during rendering. To resolve this, I made a key adjustment in the `useEffect` hook of my application. I incorporated an `if` condition containing a conditional statement to check that the array of data from the JSON object had a length greater than 1. This check was crucial—it confirmed that the data had been successfully passed in and was ready to be rendered for each to-do item. This modification stabilised data rendering and improved the overall robustness of the application.",

    "Incorporating text-to-speech (TTS) functionality into my project was straightforward, thanks to the built-in TTS package provided by Expo. All it required was importing the package into my project and creating a function that takes a string as input. This function then vocalizes the text aloud. Additionally, the TTS settings are quite flexible, allowing modifications like adjusting the speech speed or selecting the gender of the voice. Currently, the default setting uses a British voice. However, for future updates, I plan to enhance the application by adding options that allow users to change the voice. This feature will provide users with more personalization options, making the application more adaptable to individual preferences and needs."
  ],
  "desc-5" : [
    "This was my first project using Tailwind CSS. After working with this framework, I quickly understood why companies prefer frameworks like Tailwind and Bootstrap. It eliminates the need to repeatedly specify color RGB codes by allowing you to define custom keys, such as \"secondary,\" that reference a specific color. For example, to use this color for text, I would type \"text-secondary.\" This simplifies and speeds up the development process.",

    "Learning the basics of animations, such as hover effects, quickly revealed the extensive possibilities of animation design. However, I believe simplicity is often more effective than overusing animations, which can make websites look cheap or childish.",
    "Accessibility was a key consideration in my approach. I added hover effects that change the colour or enlarge the container to clearly indicate when the user is hovering over the correct element. Additionally, I prioritised accessibility by incorporating a colour palette suitable for dark mode or high contrast mode, which reduces eye strain and enhances readability."

  ],
  "desc-4" : [
    "This is the first project I did using React Native. Thanks to Having proficiency in React made the transition seamless. In our team of six, each of us was responsible for implementing multiple features, including a login screen, a category screen, and styling. We utilized a mix of pair programming and mob programming to bring the app together.",
    "We held daily stand-ups, gaining valuable experience in how a real agile working environment handles task delegation. To stay organized, we used Trello to track our progress and maintain a record of all completed and in-progress tasks.",
    "We had ample opportunity to hone our communication skills. Each team member led at least two stand-up meetings during the project, and everyone was required to discuss a specific feature of the app during our presentations.",
    "One challenge that stands out involved adding a new category to the app. The category wouldn't appear immediately after being added by the user. To address this, my partner and I implemented a refresh state that activates when the user presses \"add,\" serving as a confirmation that the category has been successfully added."
  ],
  "desc-3" : [
    "This is my first project using MongoDB. Having experience with PostgreSQL gave me a basic understanding of how databases function, and transitioning my knowledge from one database system to another proved to be more enriching than I expected.",
    "We held daily stand-ups, gaining valuable experience in how a real agile working environment handles task delegation. To stay organized, we used Trello to track our progress and maintain a record of all completed and in-progress tasks.",
    "We had ample opportunity to hone our communication skills. Each team member led at least two stand-up meetings during the project, and everyone was required to discuss a specific feature of the app during our presentations.",
    "Error handling has always fascinated me because it presents continuous opportunities to encounter and resolve new issues, such as incorrect user login details or saving an empty string to the database when a user hasn't saved any quotes. I've come to realize that error handling is likely a lifelong practice. The most effective way to uncover more errors is by having users test the application and provide feedback."
  ]
}
